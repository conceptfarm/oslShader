OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0dev
# options: 
shader oslTangentSpace
param	vector	direction	0 1 0		%read{2,5} %write{2147483647,-1}
param	int	normalType	0		%meta{string,widget,"popup"} %meta{string,options,"0:ShadingNormal|1:GeometricNormal"}  %read{0,3} %write{2147483647,-1}
oparam	vector	tangent	0 0 0		%read{2147483647,-1} %write{2,5}
global	normal	N	%read{2,2} %write{2147483647,-1}
global	normal	Ng	%read{5,5} %write{2147483647,-1}
const	int	$const1	0		%read{0,0} %write{2147483647,-1}
temp	int	$tmp1	%read{1,1} %write{0,0}
const	int	$const2	1		%read{3,3} %write{2147483647,-1}
temp	int	$tmp2	%read{4,4} %write{3,3}
code ___main___
# osl-tangentSpace/OSL/osl-tangentSpace.osl:12
#     if (0 == normalType)
	eq		$tmp1 $const1 normalType 	%filename{"osl-tangentSpace/OSL/osl-tangentSpace.osl"} %line{12} %argrw{"wrr"}
	if		$tmp1 3 6 	%argrw{"r"}
# osl-tangentSpace/OSL/osl-tangentSpace.osl:14
#         tangent = cross(direction, N);
	cross		tangent direction N 	%line{14} %argrw{"wrr"}
# osl-tangentSpace/OSL/osl-tangentSpace.osl:16
#     else if (1 == normalType)
	eq		$tmp2 $const2 normalType 	%line{16} %argrw{"wrr"}
	if		$tmp2 6 6 	%argrw{"r"}
# osl-tangentSpace/OSL/osl-tangentSpace.osl:18
#         tangent = cross(direction, Ng);
	cross		tangent direction Ng 	%line{18} %argrw{"wrr"}
	end
